var FVLOGGER_VERSION="1.0";var FVL_LOG_ON=true;var FVL_DEFAULT_LOG_LEVEL=FVL_DEBUG;var FVL_LOG_ID="fvlogger";var FVL_LOG_ELEMENT="p";var FVL_DEBUG=0;var FVL_INFO=1;var FVL_WARN=2;var FVL_ERROR=3;var FVL_FATAL=4;var FVL_LOG_CLASSES=new Array("debug","info","warn","error","fatal");function getLogger(id){if(arguments.length==0){id=FVL_LOG_ID}return document.getElementById(id)}function showDebug(){FVL_showMessages(FVL_DEBUG)}function showInfo(){FVL_showMessages(FVL_INFO)}function showWarn(){FVL_showMessages(FVL_WARN)}function showError(){FVL_showMessages(FVL_ERROR)}function showFatal(){FVL_showMessages(FVL_FATAL)}function showAll(){FVL_showMessages()}function eraseLog(ask){var debug=getLogger();if(!debug){return false}if(ask&&!confirm("Are you sure you wish to erase the log?")){return false}var ps=debug.getElementsByTagName(FVL_LOG_ELEMENT);var length=ps.length;for(var i=0;i<length;i++){debug.removeChild(ps[length-i-1])}return true}function debug(message){FVL_log(""+message,FVL_DEBUG)}function warn(message){FVL_log(""+message,FVL_WARN)}function info(message){FVL_log(""+message,FVL_INFO)}function error(message){FVL_log(""+message,FVL_ERROR)}function windowError(message,url,line){FVL_log("Error on line "+line+" of document "+url+": "+message,FVL_FATAL);return true}if(FVL_LOG_ON){window.onerror=windowError}function FVL_showMessages(level,hideOthers){var showAll=false;if(arguments.length==0){level=FVL_DEFAULT_LOG_LEVEL;showAll=true}if(arguments.length<2){hideOthers=true}var debug=getLogger();if(!debug){return false}var ps=debug.getElementsByTagName("p");if(ps.length==0){return true}var l=ps.length;var lookup=FVL_LOG_CLASSES[level];for(var i=l-1;i>=0;i--){if(hideOthers){hide(ps[i])}var c=getNodeClass(ps[i]);if(c&&c.indexOf(lookup)>-1||showAll){show(ps[i])}}}function FVL_log(message,level){if(!FVL_LOG_ON){return false}if(arguments.length==1){level=FVL_INFO}if(level<FVL_DEFAULT_LOG_LEVEL){return false}var div=getLogger();if(!div){return false}var p=document.createElement(FVL_LOG_ELEMENT);if(p.getAttributeNode("class")){for(var i=0;i<p.attributes.length;i++){if(p.attributes[i].name.toUpperCase()=="CLASS"){p.attributes[i].value=FVL_LOG_CLASSES[level]}}}else{p.setAttribute("class",FVL_LOG_CLASSES[level])}var text=document.createTextNode(message);p.appendChild(text);div.appendChild(p);return true}function exampleLogs(){debug("Scatter debug messages throughout your code to provide a high-level overview of what your code is doing, such as which function is currently in scope and the values of loop counters.");info("Information messages are the meat and potatoes of logging messages; sprinkle them around to reveal more detailed information about your script's execution, such as the values of variables and function/method return values.");warn("Warning messages are used to indicate potentially hazardous situations, such as missing function arguments...");error("While error messages are used to indicate that something bad is about to happen; note that these kinds of errors are considered to be run-time errors, which are a different type of beast from the parse errors mentioned below.");a}function show(target){target.style.display="";return true}function hide(target){target.style.display="none";return true}function getNodeClass(obj){var result=false;if(obj.getAttributeNode("class")){result=obj.attributes.getNamedItem("class").value}return result};